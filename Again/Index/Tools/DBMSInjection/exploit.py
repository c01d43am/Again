# Description: This script is used to check for SQL injection vulnerabilities using sqlmap.
# The user can run sqlmap on a target URL to check for SQL injection vulnerabilities.
import subprocess
#-------------------------------------------------------------------------------------------------------------
def run_sqlmap(target_url):#sqlmap is a tool to check SQL injection vulnerabilities
    """Run sqlmap to check for SQL injection vulnerabilities on the target URL."""
    python_cmd = "python3" if subprocess.run("which python3", shell=True, capture_output=True).returncode == 0 else "python"
    print(f"\nRunning sqlmap on {target_url} ")
    try:
        command = f"sqlmap -u {target_url} --batch --risk=3 --level=5"
        subprocess.run(command, shell=True, check=True)
        print(f"sqlmap scan completed for {target_url}.")
    except subprocess.CalledProcessError as e:
        print(f"Failed to run sqlmap on {target_url}: {e}")
    except Exception as e:
        print(f"An unexpected error occurred while running sqlmap: {e}")

#-------------------------------------------------------------------------------------------------------------
def exploit_tool_menu(): #sqlmap is a tool to check SQL injection vulnerabilities
    """Tool to check for SQL injection vulnerabilities using sqlmap."""
    while True:
        print("\nMySQL Injection Tool:")
        print("1. Run sqlmap on a Target URL")
        print("2. Return to Main Menu\n")

        choice = input("Enter your choice [1-2]: ")
        if choice == "1":
            target_url = input("Enter the target URL (including http/https): ")
            if target_url:
                run_sqlmap(target_url)  # Run sqlmap for the given URL
            else:
                print("Invalid URL. Please try again.")
        elif choice == "2":
            print("Returning to Main Menu.")
            break
        else:
            funny_responses = [
                "Oops! That wasn't on the menu. Try again!",
                "Nice try, but that's not an option!",
                "Invalid choice. Are you testing my patience?",
                "Error 404: Your choice not found!",
                "You broke the menu... Just kidding, try again!"
            ]
            import random
            print(random.choice(funny_responses))

#-------------------------------------------------------------------------------------------------------------
if __name__ == "__main__":
    exploit_tool_menu()
